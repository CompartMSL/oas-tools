#!/usr/bin/env node

var program = require('commander');
var fs = require('fs');
var path = require('path');
var jsyaml = require('js-yaml');
var ZSchema = require('z-schema');
var validator = new ZSchema({
  ignoreUnresolvableReferences: true
});
var config = require('../src/configurations'),
  logger = config.logger;
var shell = require('shelljs');
var zipFolder = require('zip-folder');
var touch = require("touch");

var schemaV3 = fs.readFileSync(path.join(__dirname, './schemas/openapi-3.0.json'), 'utf8');
schemaV3 = JSON.parse(schemaV3);

program
  .arguments('<file>')
  .action(function(file) {
    try {
      var spec = fs.readFileSync(path.join(__dirname, file), 'utf8');
      var oasDoc = jsyaml.safeLoad(spec);
      logger.info('Input oas-doc %s: %s', file, oasDoc);
      validator.validate(oasDoc, schemaV3, function(err, valid) {
        if (err) {
          logger.error('oasDoc is not valid: ' + JSON.stringify(err));
          process.exit();
        } else {
          shell.exec('mkdir nodejs-server-generated');
          shell.cd('nodejs-server-generated');
          shell.cp('../auxiliary/README.md', './README.md');

          shell.exec('mkdir .oas-generator && echo 1.0.0 > .oas-generator/VERSION');

          shell.exec('mkdir api');
          shell.cp('../' + file, './api/oas-doc.yaml');

          shell.exec('mkdir utils');
          shell.cp('../auxiliary/writer.js', './utils/writer.js');

          /*
                    'use strict';

                    var url = require('url');

                    var Default = require('./DefaultService');

                    module.exports.deleteVotes = function deleteVotes (req, res, next) {
                      Default.deleteVotes(req.swagger.params, res, next);
                    };

                    module.exports.getResults = function getResults (req, res, next) {
                      Default.getResults(req.swagger.params, res, next);
                    };

                    module.exports.registerVote = function registerVote (req, res, next) {
                      Default.registerVote(req.swagger.params, res, next);
                    };
          */

          shell.exec('mkdir controllers');
          var paths = oasDoc.paths;
          var open = true;
          for (path in paths) {
            for (var method in paths[path]) {
              if (paths[path][method].operationId != undefined) {
                opId = paths[path][method].operationId;
                var function_string = "module.exports." + opId + " = function " + opId + " (req, res, next) {\nDefault." + opId + "(req.swagger.params, res, next);\n};\n";
                var function_string_service = "module.exports." + opId + " = function " + opId + " (req, res, next) {\nres.send({message: 'This is the raw controller for " + opId + "' });\n};\n";
              }
              if (paths[path][method]['x-router-controller'] != undefined) {
                logger.debug("Write: " + paths[path][method].operationId)
                if (open == true) {
                  var header = "'use strict' \nvar Default = require('./" + paths[path][method]['x-router-controller'] + "Service');\n";
                  fs.appendFileSync(__dirname + '/nodejs-server-generated/controllers/' + paths[path][method]['x-router-controller'] + ".js", header); //write in Default
                  fs.appendFileSync(__dirname + '/nodejs-server-generated/controllers/' + paths[path][method]['x-router-controller'] + "Service.js", "'use strict'\n"); //write in DefaultService
                  open = false;
                }
                fs.appendFileSync(__dirname + '/nodejs-server-generated/controllers/' + paths[path][method]['x-router-controller'] + ".js", function_string); //write in Default
                fs.appendFileSync(__dirname + '/nodejs-server-generated/controllers/' + paths[path][method]['x-router-controller'] + "Service.js", function_string_service); //write in DefaultService
              }
            }
          }

          touch.sync('.oas-generator-ignore');
          shell.cp('../auxiliary/index.js', './index.js');

          var package_raw = {
            "name": oasDoc.info.title,
            "version": "1.0.0",
            "description": "No description provided (generated by OAS Codegen)",
            "main": "index.js",
            "scripts": {
              "prestart": "npm install",
              "start": "node index.js"
            },
            "keywords": [
              "OAI"
            ],
            "license": "Unlicense",
            "private": true,
            "dependencies": {
              "express": "^4.16.3",
              "js-yaml": "^3.3.0"
            }
          };

          fs.appendFileSync(__dirname + '/nodejs-server-generated/' + 'package.json', JSON.stringify(package_raw));

          shell.exec('npm install');

          shell.cd('..');
          zipFolder('nodejs-server-generated', 'nodejs-server-generated.zip', function(err) {
            if (err) {
              console.log('oh no!', err);
            } else {
              console.log('EXCELLENT');
              //shell.rm('-r', 'nodejs-server-generated');
            }
          });
        }
      });
    } catch (err) {
      logger.error(err);
    }
  })
  .parse(process.argv);
